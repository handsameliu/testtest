{"version":3,"sources":["page/LineofdashedChart.js","page/CurvedLineChart.js","utils/utils.js","utils/axios.js","page/Charts.js","App.js","serviceWorker.js","index.js"],"names":["Lineofdashed","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","chart","_this2","_this$props","_this$props$height","height","_this$props$data","data","_this$props$scale","scale","fieldKVs","ys","startTime","endTime","react_default","a","createElement","style","backgroundColor","BizCharts","forceFit","padding","onGetG2Instance","g2Chart","animate","position","custom","items","value","marker","symbol","fill","radius","onClick","ev","item","checked","geoms","getAllGeoms","i","length","geom","getYScale","alias","show","hide","charDataBefore","name","grid","type","size","color","shape","tooltip","y1","unit","title","stroke","lineWidth","charDataAfter","y2","React","Component","CurvedLineChart","sliderChange","times","ds","setState","startValue","endValue","_this$props$fieldKVs","_this$props$ys","dv","DataSet","start","Date","getTime","end","createView","source","transform","fields","key","top","right","bottom","left","offsetY","itemFormatter","val","label","textStyle","textBaseline","formatter","concat","crosshairs","yData","temperature","addMonth","date","num","Number","sDate","getMonth","arr","split","dateToDate","eYear","getFullYear","eMonth","eDay","getDate","eDate","codeMessage","200","201","202","204","400","401","403","404","406","410","422","500","502","503","504","axios","interceptors","request","use","conf","url","HOST","mode","error","Promise","reject","response","status","page","headers","pagination_current_page","pagination_page_count","pagination_per_page","pagination_total_count","objectSpread","statusText","message","checkStatus","FormItem","Form","Item","RangePicker","DatePicker","REG","Typography","Text","requestTitles","bloodSugarBeforeSleep","bloodSugarRandom","bloodSugarAfterDinner2H","bloodSugarBeforeDinner","bloodSugarAfterLunch2H","bloodSugarBeforeLunch","bloodSugarAfterBreakfast2H","bloodSugarBeforeBreakfast","diastolicBloodPressure","systolicBloodPressure","Charts","filterChartData","keys","params","charData","forEach","index","indexOf","time","iindex","tempObj","x","datas","y1Title","y2Title","push","temp","find","dd","sort","b","filterTitleMap","titles","filterChartScale","mask","filterChartYs","map","filterBloodSugerChartData","searchInfo","e","preventDefault","userDeviceDatas","dateTimes","console","log","started_at","format","ended_at","getLineChart","get","uid","item_key","per-page","timeout","withCredentials","Accept","Content-Type","Authorization","token","then","result","test","reverse","item_value","created_at","resUserDeviceDatas","defineProperty","item_key_cn","item_unit","catch","err","warn","handleRangeDisabledDate","moment","nowTime","lastTime","start_at","end_at","isDiagnosed","chartData","chartType","titleMap","chartScale","chartYs","bloodSugerChartData","react","card","bordered","es_form","layout","onSubmit","row","justify","align","col","span","assign","wrapperCol","xs","sm","md","disabledDate","defaultValue","onChange","dates","dateString","es_button","marginLeft","ref","submigRef","htmlType","LineofdashedChart","page_CurvedLineChart","App","querys","variable","vars","window","location","search","substring","pair","getQueryVariable","className","Charts_Charts","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.89cb70cc.chunk.js","sourcesContent":["/* eslint-disable react/jsx-indent-props */\r\n/* eslint-disable react/jsx-indent */\r\n/* eslint-disable react/prefer-stateless-function */\r\n/* jshint -W054 */\r\nimport React from \"react\";\r\nimport { Chart, Geom, Axis, Tooltip, Legend, View, Coord, } from \"bizcharts\";\r\n// import DataSet from \"@antv/data-set\";\r\n// import Slider from \"bizcharts-plugin-slider\";\r\n\r\n// 血糖\r\nclass Lineofdashed extends React.Component {\r\n\r\n    constructor(props) { \r\n        super(props);\r\n        this.state = {};\r\n        this.chart = null;\r\n    }\r\n\r\n    render() {\r\n        const { height = 400, data = {}, scale={}, fieldKVs={}, ys=[], startTime, endTime} = this.props;\r\n        // console.log(data, scale, fieldKVs, ys, startTime, endTime);\r\n\t\treturn (\r\n\t\t\t<div style={{backgroundColor: '#fff', }}>\r\n                <Chart\r\n                    height={height}\r\n                    scale={scale}\r\n                    forceFit\r\n                    padding={[50, 30, 50, 30]}\r\n                    onGetG2Instance={\r\n                        g2Chart => {\r\n                            g2Chart.animate(false);\r\n                            this.chart = g2Chart;\r\n                        }\r\n                    }\r\n                >\r\n                    <Legend\r\n                        position='top'\r\n                        custom\r\n                        items={\r\n                            [{\r\n                                value: \"餐前\",\r\n                                marker: {\r\n                                    symbol: \"circle\",\r\n                                    fill: \"l(100) 0:#fefcf2 1:#f3d028\",\r\n                                    radius: 5\r\n                                }\r\n                            },\r\n                            {\r\n                                value: \"餐后\",\r\n                                marker: {\r\n                                    symbol: \"circle\",\r\n                                    fill: \"l(100) 0:#d5f2f5 1:#5fced8\",\r\n                                    radius: 5\r\n                                }\r\n                            }]\r\n                        }\r\n                        onClick={\r\n                            (ev) => {\r\n                                const item = ev.item;\r\n                                const value = item.value;\r\n                                const checked = ev.checked;\r\n                                const geoms = this.chart.getAllGeoms();\r\n                                for (let i = 0; i < geoms.length; i++) {\r\n                                    const geom = geoms[i];\r\n                                    if (geom.getYScale().alias === value) {\r\n                                        if (checked) {\r\n                                            geom.show();\r\n                                        } else {\r\n                                            geom.hide();\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    />\r\n                    <Tooltip />\r\n                    <Coord />\r\n                    <View data={data.charDataBefore} scale={scale} forceFit>\r\n                        <Axis name=\"x\" grid={null} />\r\n                        <Geom\r\n                            type=\"line\"\r\n                            position=\"x*y1\"\r\n                            size={2}\r\n                            color='#f3d028'\r\n                            shape='circle'\r\n                            tooltip={\r\n                                ['y1*unit*title', (y1, unit, title) => {\r\n                                    return {\r\n                                        name: title,\r\n                                        value: (y1 + unit) || ''\r\n                                    }\r\n                                }]\r\n                            }\r\n                        />\r\n                        <Geom\r\n                            type=\"point\"\r\n                            position=\"x*y1\"\r\n                            size={4}\r\n                            color='#f3d028'\r\n                            shape='circle'\r\n                            style={{\r\n                                stroke: \"#fff\",\r\n                                lineWidth: 1\r\n                            }}\r\n                            tooltip={\r\n                                ['y1*unit*title', (y1, unit, title) => {\r\n                                    return {\r\n                                        name: title,\r\n                                        value: (y1 + unit) || ''\r\n                                    }\r\n                                }]\r\n                            }\r\n                        />\r\n                    </View>\r\n                    <View data={data.charDataAfter} scale={scale} forceFit>\r\n                        <Geom\r\n                            type=\"line\"\r\n                            position=\"x*y2\"\r\n                            size={2}\r\n                            color='#5fced8'\r\n                            shape='circle'\r\n                            tooltip={\r\n                                ['y2*unit*title', (y2, unit, title) => {\r\n                                    return {\r\n                                        name: title,\r\n                                        value: (y2 + unit) || ''\r\n                                    }\r\n                                }]\r\n                            }\r\n                        />\r\n                        <Geom\r\n                            type=\"point\"\r\n                            position=\"x*y2\"\r\n                            size={4}\r\n                            color='#5fced8'\r\n                            shape='circle'\r\n                            style={{\r\n                                stroke: \"#fff\",\r\n                                lineWidth: 1\r\n                            }}\r\n                            tooltip={\r\n                                ['y2*unit*title', (y2, unit, title) => {\r\n                                    return {\r\n                                        name: title,\r\n                                        value: (y2 + unit) || ''\r\n                                    }\r\n                                }]\r\n                            }\r\n                        />\r\n                    </View>\r\n                </Chart>\r\n\t\t\t</div>\r\n\t\t);\r\n    }\r\n}\r\n\r\nexport default Lineofdashed;\r\n","/* eslint-disable react/jsx-indent-props */\r\n/* eslint-disable react/jsx-indent */\r\n/* eslint-disable react/prefer-stateless-function */\r\n/* jshint -W054 */\r\nimport React from \"react\";\r\nimport { Chart, Geom, Axis, Tooltip, Legend, } from \"bizcharts\";\r\nimport DataSet from \"@antv/data-set\";\r\n// import Slider from \"bizcharts-plugin-slider\";\r\n\r\n// 血压\r\nclass CurvedLineChart extends React.Component {\r\n\r\n    constructor(props) { \r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n\tsliderChange = (times, ds) => {\r\n\t\tds.setState(\"start\", times.startValue);\r\n\t\tds.setState(\"end\", times.endValue);\r\n\t}\r\n\t\t\r\n    render() {\r\n\t\tconst { height=400, data=[], scale={}, fieldKVs={}, ys=[], startTime, endTime} = this.props;\r\n\r\n\t\t// const data = [\r\n\t\t// \t{\r\n\t\t// \t\tx: \"2019-4-28 06:59:04\",\r\n\t\t// \t\ty1: 7.0,\r\n\t\t// \t\ty2: 3.9\r\n\t\t// \t},\r\n\t\t// ];\r\n\t\tconst ds = new DataSet({\r\n\t\t\tstate: {\r\n\t\t\t\tstart: new Date(startTime).getTime(),\r\n\t\t\t\tend: new Date(endTime).getTime()\r\n\t\t\t}\r\n\t\t});\r\n\t\tconst dv = ds.createView().source(data);\r\n\t\tdv.transform({\r\n\t\t\ttype: \"fold\",\r\n\t\t\tfields: ys,\r\n\t\t\t// 展开字段集\r\n\t\t\tkey: \"yData\",\r\n\t\t\t// key字段\r\n            value: \"temperature\",\r\n            // value字段\r\n\r\n\t\t\t// type: \"filter\",\r\n\t\t\t// callback(obj) {\r\n\t\t\t// \tconst time = new Date(obj.x).getTime(); // !注意：时间格式，建议转换为时间戳进行比较\r\n\t\t\t// \tconsole.log(time);\r\n\t\t\t// \treturn time >= ds.state.start && time <= ds.state.end;\r\n\t\t\t// }\r\n\t\t});\r\n\t\t// const scale = {\r\n\t\t// \tx: {\r\n\t\t// \talias: '日期',\r\n\t\t// \t},\r\n\t\t// };\r\n\t\t// console.log(data, scale, fieldKVs, ys, startTime, endTime);\r\n\t\treturn (\r\n\t\t\t<div style={{backgroundColor: '#fff', }}>\r\n\t\t\t\t<Chart height={height} data={dv} scale={scale} forceFit padding={{ top: 20, right: 30, bottom: 50, left: 30 }}>\r\n\t\t\t\t\t<Legend \r\n\t\t\t\t\t\tposition='top' \r\n\t\t\t\t\t\toffsetY={10}\r\n\t\t\t\t\t\titemFormatter={(val)=>{\r\n\t\t\t\t\t\t\treturn fieldKVs[val];\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Axis \r\n\t\t\t\t\t\tname=\"x\" \r\n\t\t\t\t\t\tlabel={{\r\n\t\t\t\t\t\t\ttextStyle: {\r\n\t\t\t\t\t\t\t\t// fill: 'red',  // 颜色\r\n\t\t\t\t\t\t\t\ttextBaseline: 'top'  // 对齐基线\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tformatter: (val) => {\r\n\t\t\t\t\t\t\t\treturn `${ val }`\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Axis name=\"temperature\" />\r\n\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\tcrosshairs={{\r\n\t\t\t\t\t\t\ttype: \"y\"\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Geom\r\n\t\t\t\t\t\ttype=\"line\"\r\n\t\t\t\t\t\tposition=\"x*temperature\"\r\n\t\t\t\t\t\tsize={2}\r\n\t\t\t\t\t\tcolor={[\"yData\", ['#1890FF', '#2fc25b']]}\r\n\t\t\t\t\t\tshape=\"smooth\"\r\n\t\t\t\t\t\ttooltip={\r\n\t\t\t\t\t\t\t['yData*temperature*title*unit', (yData, temperature, title, unit) => {\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\tname: title || fieldKVs[yData],\r\n\t\t\t\t\t\t\t\t\tvalue: (temperature || '') + unit\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{/* <Geom \r\n\t\t\t\t\t\ttype=\"area\" \r\n\t\t\t\t\t\tposition=\"x*temperature\" \r\n\t\t\t\t\t\tcolor=\"yData\" \r\n\t\t\t\t\t\tshape=\"smooth\" \r\n\t\t\t\t\t\ttooltip={['yData*temperature', (yData, temperature)=>{\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tname: fieldKVs[yData],\r\n\t\t\t\t\t\t\t\tvalue: temperature\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}]}\r\n\t\t\t\t\t/> */}\r\n\t\t\t\t\t<Geom\r\n\t\t\t\t\t\ttype=\"point\"\r\n\t\t\t\t\t\tposition=\"x*temperature\"\r\n\t\t\t\t\t\tsize={4}\r\n\t\t\t\t\t\tcolor={[\"yData\", ['#1890FF', '#2fc25b']]}\r\n\t\t\t\t\t\tshape=\"circle\"\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tstroke: \"#fff\",\r\n\t\t\t\t\t\t\tlineWidth: 1\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\ttooltip={\r\n\t\t\t\t\t\t\t['yData*temperature*title*unit', (yData, temperature, title, unit) => {\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\tname: title || fieldKVs[yData],\r\n\t\t\t\t\t\t\t\t\tvalue: (temperature || '') + unit\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Chart>\r\n\t\t\t</div>\r\n\t\t);\r\n    }\r\n}\r\n\r\nexport default CurvedLineChart;\r\n","\r\nexport function dateToDate (date) {\r\n    let sDate = new Date();\r\n    if (typeof date === 'object' && typeof new Date().getMonth === \"function\" ) {\r\n        sDate = date;\r\n    }\r\n    else if (typeof date === \"string\") {\r\n        let arr = date.split('-')\r\n        if (arr.length === 3) {\r\n            sDate = new Date(`${arr[0]}-${arr[1]}-${arr[2]}`);\r\n        }\r\n    }\r\n    return sDate;\r\n}\r\n\r\nexport function addMonth (date, num) {\r\n    num = Number(num);\r\n    const sDate = dateToDate(date);\r\n  \r\n    const sYear = sDate.getFullYear();\r\n    const sMonth = sDate.getMonth() + 1;\r\n    const sDay = sDate.getDate();\r\n  \r\n    let eYear = sYear;\r\n    let eMonth = sMonth + num;\r\n    let eDay = sDay;\r\n    while (eMonth > 12) {\r\n        eYear++;\r\n        eMonth -= 12;\r\n    }\r\n  \r\n    let eDate = new Date(eYear, eMonth - 1, eDay);\r\n  \r\n    while (eDate.getMonth() !== eMonth - 1) {\r\n        eDay--;\r\n        eDate = new Date(eYear, eMonth - 1, eDay);\r\n    }\r\n  \r\n    return eDate;\r\n}\r\n\r\nexport function getQueryVariable(variable) {\r\n    let query = window.location.search.substring(1);\r\n    let vars = query.split(\"&\");\r\n    let params = {};\r\n    for (let i=0;i<vars.length;i++) {\r\n        let pair = vars[i].split(\"=\");\r\n        if (pair[0] === variable) {\r\n            return pair[1];\r\n        }\r\n        params[pair[0]] = pair[1];\r\n    }\r\n    return params;\r\n}\r\n  ","import axios from 'axios';\r\n// import \"babel-polyfill\";\r\nimport { HOSTtest, HOST, STAGE, STAGEHOST, } from './setting.json';\r\n \r\nconst codeMessage = {\r\n    200: '服务器成功返回请求的数据。',\r\n    201: '新建或修改数据成功。',\r\n    202: '一个请求已经进入后台排队（异步任务）。',\r\n    204: '删除数据成功。',\r\n    400: '发出的请求有错误，服务器没有进行新建或修改数据的操作。',\r\n    401: '用户没有权限（令牌、用户名、密码错误）。',\r\n    403: '用户得到授权，但是访问是被禁止的。',\r\n    404: '发出的请求针对的是不存在的记录，服务器没有进行操作。',\r\n    406: '请求的格式不可得。',\r\n    410: '请求的资源被永久删除，且不会再得到的。',\r\n    422: '当创建一个对象时，发生一个验证错误。',\r\n    500: '服务器发生错误，请检查服务器。',\r\n    502: '网关错误。',\r\n    503: '服务不可用，服务器暂时过载或维护。',\r\n    504: '网关超时。',\r\n};\r\n\r\n// 添加请求拦截器\r\naxios.interceptors.request.use(\r\n    conf => {\r\n        // 配置axios请求的url  ${config.ajaxUrl} 是配置的请求url统一前缀，配置好就不用重复写一样的url前缀了，只写后面不同的就可以了\r\n        conf.url = `${HOST}${conf.url}`;\r\n        conf.mode = 'cors';\r\n        // console.log(conf);\r\n        return conf;\r\n    },\r\n    error => {\r\n        // 抛出请求错误信息\r\n        Promise.reject(error.response);\r\n    }\r\n);\r\n \r\n// 添加响应拦截器\r\naxios.interceptors.response.use(\r\n    response => {\r\n        return checkStatus(response);\r\n    },\r\n    error => {\r\n        // 请求失败处理\r\n        return Promise.reject(error)\r\n    }\r\n);\r\n\r\n\r\nfunction checkStatus (response) {\r\n    // console.log(response);\r\n    // loading\r\n    // 如果http状态码正常，则直接返回数据\r\n    if (response && (response.status === 200 || response.status === 201 || response.status === 202 || response.status === 304 || response.status === 400)) {\r\n        let page = {};\r\n        response.headers['x-pagination-current-page'] && (page.pagination_current_page = response.headers['x-pagination-current-page']);\r\n        response.headers['x-pagination-page-count'] && (page.pagination_page_count = response.headers['x-pagination-page-count']);\r\n        response.headers['x-pagination-per-page'] && (page.pagination_per_page = response.headers['x-pagination-per-page']);\r\n        response.headers['x-pagination-total-count'] && (page.pagination_total_count = response.headers['x-pagination-total-count']);\r\n        // headers.get('X-Pagination-Current-Page')>=0 && (page.pagination_current_page = headers.get('X-Pagination-Current-Page'))\r\n        // headers.get('X-Pagination-Page-Count')>=0 && (page.pagination_page_count = headers.get('X-Pagination-Page-Count'))\r\n        // headers.get('X-Pagination-Per-Page')>=0 && (page.pagination_per_page = headers.get('X-Pagination-Per-Page'))\r\n        // headers.get('X-Pagination-Total-Count')>=0 && (page.pagination_total_count = headers.get('X-Pagination-Total-Count'))\r\n        return {\r\n            status: response.status,\r\n            data: response.data,\r\n            statusText: response.statusText,\r\n            ...page,\r\n            // ...response,\r\n        }\r\n      // 如果不需要除了data之外的数据，可以直接 return response.data\r\n    }\r\n    // 异常状态下，把错误信息返回去\r\n    return {\r\n        status: response.status,\r\n        data: response.data,\r\n        statusText: response.statusText,\r\n        message: codeMessage[response.status],\r\n    }\r\n}\r\n\r\nexport default axios;","import React, { Component, Fragment, } from 'react';\r\nimport { Icon, Card, Row, Col, List, Form, Button, DatePicker, PageHeader, Typography, Table, message, } from 'antd';\r\nimport LineofdashedChart from './LineofdashedChart';\r\nimport CurvedLineChart from './CurvedLineChart';\r\nimport { addMonth } from '../utils/utils';\r\nimport moment from 'moment';\r\nimport axios from '../utils/axios';\r\n\r\nconst FormItem = Form.Item;\r\nconst { RangePicker } = DatePicker;\r\nconst { Text } = Typography;\r\nconst dateFormat = 'YYYY/MM/DD';\r\nconst REG = /^2\\d{2}$/\r\nconst requestTitles = {\r\n    bloodSugarBeforeSleep: '睡前血糖',\r\n    bloodSugarRandom: '随机血糖',\r\n    bloodSugarAfterDinner2H: '晚餐餐后两小时血糖',\r\n    bloodSugarBeforeDinner: '晚餐餐前血糖',\r\n    bloodSugarAfterLunch2H: '午餐餐后两小时血糖',\r\n    bloodSugarBeforeLunch: '午餐餐前血糖',\r\n    bloodSugarAfterBreakfast2H: '早餐餐后两小时血糖',\r\n    bloodSugarBeforeBreakfast: '早餐餐前血糖',\r\n    diastolicBloodPressure: '舒张压',\r\n    systolicBloodPressure: '收缩压',\r\n};\r\n\r\nexport default class Charts extends Component { \r\n    constructor (props) { \r\n        super(props);\r\n        const nowTime = new Date();\r\n        const lastTime = addMonth(nowTime, -1); // new Date(nowTime.getTime() - 86400000); // \r\n        this.state = {\r\n            token: props.token,\r\n            start_at: lastTime,\r\n            end_at: nowTime,\r\n            dateTimes: [], // 数据分布的展示时间\r\n            userDeviceDatas: {},\r\n            isDiagnosed: false,\r\n        };\r\n    }\r\n\r\n    componentDidMount () { }\r\n\r\n    componentWillUnmount () { }\r\n\r\n    filterChartData = (data) => {\r\n        if (!(data && Object.keys(data).length)) {\r\n            return [];\r\n        }\r\n        const { params } = this.props;\r\n        let charData = [];\r\n        // console.log(data);\r\n        Object.keys(data).forEach((key, index) => {\r\n            const item = data[key];\r\n            // console.log(index, item);\r\n            if (params.key.indexOf('bloodSugar') === 0) {\r\n                item.times.forEach((time, iindex) => {\r\n                    const tempObj = {};\r\n                    tempObj.time = time;\r\n                    tempObj.x = new Date(time).getTime();\r\n                    // tempObj.title = item.title;\r\n                    tempObj.unit = item.unit;\r\n                    // tempObj[`y${index+1}`] = item.datas[iindex]*1;\r\n                    // console.log(key, item.title);\r\n                    if (key.indexOf('bloodSugarBefore') === 0) {\r\n                        tempObj.y1 = item.datas[iindex] * 1;\r\n                        tempObj.y1Title = item.title;\r\n                        tempObj.y2 = 0;\r\n                        tempObj.y2Title = '';\r\n                    } else if (key.indexOf('bloodSugarAfter') === 0) {\r\n                        tempObj.y2 = item.datas[iindex] * 1;\r\n                        tempObj.y2Title = item.title;\r\n                        tempObj.y1 = 0;\r\n                        tempObj.y1Title = '';\r\n                    }\r\n                    charData.push(tempObj);\r\n                })\r\n            } else {\r\n                // if (index === 0) {\r\n                    item.times.forEach((time, iindex) => {\r\n                        let tempObj = {};\r\n                        tempObj.time = time;\r\n                        tempObj.x = new Date(time).getTime();\r\n                        // tempObj.title = item.title;\r\n                        tempObj.unit = item.unit;\r\n                        if (index !== 0) {\r\n                            let temp = charData.find((dd) => { return dd.time === time });\r\n                            if (temp) {\r\n                                tempObj = temp;\r\n                            }\r\n                        }\r\n                        if (key === 'diastolicBloodPressure') {\r\n                            tempObj.y2 = item.datas[iindex] * 1;\r\n                        } else if (key === 'systolicBloodPressure') {\r\n                            tempObj.y1 = item.datas[iindex] * 1;\r\n                        } else {\r\n                            tempObj[`y${index + 1}`] = item.datas[iindex] * 1;\r\n                        }\r\n                        // console.log(tempObj);\r\n                        charData.push(tempObj);\r\n                    });\r\n                // } else {\r\n                //     charData = charData.map((obj, iindex) => {\r\n                //         obj[`y${index+1}`] = item.datas[iindex]*1;\r\n                //         return obj;\r\n                //     });\r\n                // }\r\n            }\r\n        });\r\n        // const dataLength = Object.keys(data).length;\r\n        // if (params.key.indexOf('bloodSugar') === 0) {\r\n        //     charData = charData.map((item) => {\r\n        //         let temp = item;\r\n        //         for (let i = 0; i < dataLength; i++) {\r\n        //             if (!item[`y${i+1}`]) {\r\n        //                 temp[`y${i+1}`] = 0;\r\n        //             }\r\n        //         }\r\n        //         return temp;\r\n        //     })\r\n        // }\r\n        // console.log(charData);\r\n        return charData.sort((a, b) => {\r\n            return  a.x - b.x;\r\n        });\r\n    }\r\n\r\n    filterTitleMap = (data) => {\r\n        let titles = {};\r\n        const { params } = this.props;\r\n        if (params.key.indexOf('bloodSugar') === 0) { // 血糖\r\n            titles.y1 = '餐前';\r\n            titles.y2 = '餐后';\r\n        } else if (params.key.indexOf('BloodPressure') >= 0) { // 血压\r\n            titles.y1 = '收缩压';\r\n            titles.y2 = '舒张压';\r\n        } else { \r\n            Object.keys(data).forEach((key, index) => {\r\n                const item = data[key];\r\n                titles[`y${index+1}`] = item.title;\r\n            });\r\n        }\r\n        // console.log(titles);\r\n        return titles;\r\n    }\r\n\r\n    filterChartScale = (data) => {\r\n        const scale = {\r\n            x: {\r\n                alias: '时间',\r\n                type: \"timeCat\",\r\n                mask: \"MM/DD HH:mm\"\r\n            }\r\n        };\r\n        Object.keys(data).forEach((key) => {\r\n            scale[key] = {alias: data[key]};\r\n        })\r\n        return scale;\r\n    }\r\n\r\n    filterChartYs = (data) => {\r\n        return Object.keys(data).map((key) => { return key });\r\n    }\r\n\r\n    filterBloodSugerChartData = (data) => {\r\n        if (!(data && Object.keys(data).length)) {\r\n            return [];\r\n        }\r\n        let charDataBefore = [];\r\n        let charDataAfter = [];\r\n        // console.log(data);\r\n        Object.keys(data).forEach((key) => {\r\n            const item = data[key];\r\n            // console.log(index, item);\r\n            item.times.forEach((time, iindex) => {\r\n                const tempObj = {};\r\n                tempObj.time = time;\r\n                tempObj.x = new Date(time).getTime();\r\n                tempObj.unit = item.unit;\r\n                tempObj.title = item.title;\r\n                if (key.indexOf('bloodSugarBefore') === 0) {\r\n                  tempObj.y1 = item.datas[iindex] * 1;\r\n                    charDataBefore.push(tempObj);\r\n                } else if (key.indexOf('bloodSugarAfter') === 0) {\r\n                  tempObj.y2 = item.datas[iindex] * 1;\r\n                    charDataAfter.push(tempObj);\r\n                }\r\n            })\r\n        });\r\n        charDataBefore = charDataBefore.sort((a, b) => {\r\n            return a.x - b.x;\r\n        });\r\n        charDataAfter = charDataAfter.sort((a, b) => {\r\n            return a.x - b.x;\r\n        })\r\n        // console.log(charDataBefore, charDataAfter);\r\n        return { charDataBefore, charDataAfter };\r\n    }\r\n\r\n    searchInfo = (e) => {\r\n        e.preventDefault && e.preventDefault();\r\n        const { params } = this.props;\r\n        this.setState({ userDeviceDatas: {}, });\r\n        const data = {};\r\n        const time = {};\r\n        const { dateTimes } = this.state;\r\n        console.log(dateTimes);\r\n        const temp = dateTimes;\r\n        data.started_at = temp[0].format('YYYY.MM.DD');\r\n        data.ended_at = temp[1].format('YYYY.MM.DD');\r\n        time.started_at = (new Date(data.started_at).getTime())/1000;\r\n        time.ended_at = (new Date(`${data.ended_at} 23:59:59`).getTime()) / 1000;\r\n        this.setState({\r\n            dateTimes: {\r\n                started_at: data.started_at,\r\n                ended_at: data.ended_at\r\n            }\r\n        });\r\n        if (params.key === 'systolicBloodPressure' || params.key === 'diastolicBloodPressure') {\r\n            this.getLineChart('systolicBloodPressure', time);\r\n            this.getLineChart('diastolicBloodPressure', time);\r\n        } else if (params.key.indexOf('bloodSugar') === 0) {\r\n            // 只统计餐前和餐后的做为对比项\r\n            // this.getLineChart('bloodSugarRandom', time); \r\n            // this.getLineChart('bloodSugarBeforeSleep', time);\r\n            this.getLineChart('bloodSugarBeforeBreakfast', time);\r\n            this.getLineChart('bloodSugarAfterBreakfast2H', time);\r\n            this.getLineChart('bloodSugarBeforeLunch', time);\r\n            this.getLineChart('bloodSugarAfterLunch2H', time);\r\n            this.getLineChart('bloodSugarBeforeDinner', time);\r\n            this.getLineChart('bloodSugarAfterDinner2H', time);\r\n        } else {\r\n            this.getLineChart(params.key, time);\r\n        }\r\n    }\r\n\r\n    getLineChart = (key, data) => {\r\n        const { params } = this.props;\r\n        axios.get('/v1/user-device-datas', {\r\n            params: {\r\n                title: requestTitles[key] || '',\r\n                uid: params.uid,\r\n                item_key: key,\r\n                started_at: data.started_at,\r\n                ended_at: data.ended_at,\r\n                page: 1,\r\n                'per-page': 100,\r\n            },\r\n            timeout: 10000,\r\n            withCredentials:true,\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization' : `Bearer ${params.token}`,\r\n            }, \r\n        }).then((result) => {\r\n            console.log(result);\r\n            // Toast.hide();\r\n            if (!REG.test(result.status)) {\r\n                // cuowu\r\n                // Toast.error('没有对应的数据');\r\n            } else {\r\n                // 成功\r\n                result = result.data;\r\n                const datas = [];\r\n                const times = [];\r\n                result.reverse().forEach((item) => {\r\n                    datas.push(item.item_value);\r\n                    times.push(item.created_at);\r\n                    // times.push(moment(item.created_at).format('YYYY/MM/DD'));\r\n                });\r\n                let resUserDeviceDatas =  {\r\n                    [key]: {\r\n                        title: result[0] ? result[0].item_key_cn : '',\r\n                        unit: result[0] ? result[0].item_unit : '',\r\n                        datas,\r\n                        times,\r\n                    }\r\n                }\r\n                const { userDeviceDatas } = this.state;\r\n                this.setState({\r\n                    userDeviceDatas: {...userDeviceDatas, ...resUserDeviceDatas}\r\n                })\r\n            }\r\n        }).catch((err) => {\r\n            // Toast.hide();\r\n            console.warn('上传设备数据', err);\r\n        })\r\n    }\r\n\r\n    handleRangeDisabledDate = (time) => {\r\n        if (time) { \r\n            return time > moment();\r\n        }\r\n        return false;\r\n    }\r\n\r\n    render () { \r\n        const { chartType, height, params, } = this.props;\r\n        const { userDeviceDatas, } = this.state;\r\n        const formItemLayout = {\r\n            wrapperCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 24 },\r\n                md: { span: 20 },\r\n            },\r\n        };\r\n        let chartData = [];\r\n        chartData = this.filterChartData(userDeviceDatas);\r\n        let titleMap = [];\r\n        titleMap = this.filterTitleMap(userDeviceDatas);\r\n        let chartScale = {};\r\n        chartScale = this.filterChartScale(titleMap);\r\n        let chartYs = {};\r\n        chartYs = this.filterChartYs(titleMap);\r\n        let bloodSugerChartData = {};\r\n        bloodSugerChartData = this.filterBloodSugerChartData(userDeviceDatas);\r\n        // console.log(bloodSugerChartData);\r\n        return (\r\n            <Fragment>\r\n                <Card bordered={false}>\r\n                    <Form layout=\"inline\" onSubmit={this.searchInfo}>\r\n                        <div>\r\n                            <Row type=\"flex\" justify=\"space-around\" align=\"middle\">\r\n                                <Col span={24}>\r\n                                    <FormItem label=\"时间范围\" {...formItemLayout}>\r\n                                        {\r\n                                            <RangePicker \r\n                                                format=\"YYYY-MM-DD\"\r\n                                                size=\"large\"\r\n                                                disabledDate={this.handleRangeDisabledDate}\r\n                                                defaultValue={[moment(this.state.start_at, dateFormat), moment(this.state.end_at, dateFormat),]}\r\n                                                onChange={(dates, dateString) => { \r\n                                                    this.setState({\r\n                                                        dateTimes: dates\r\n                                                    })\r\n                                                }}\r\n                                            />\r\n                                        }\r\n                                        <Button style={{marginLeft: 15}} ref={(ref)=>{this.submigRef = ref}} type=\"primary\" htmlType=\"submit\">查询</Button>\r\n                                    </FormItem>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                    </Form>\r\n                </Card>\r\n                {\r\n                    Object.keys(chartData).length > 0 && Object.keys(titleMap).length > 0 && params.key.indexOf('bloodSugar') === 0 ? (\r\n                        <LineofdashedChart\r\n                            startTime={this.state.start_at}\r\n                            endTime={this.state.end_at}\r\n                            data={bloodSugerChartData}\r\n                            scale={chartScale}\r\n                            fieldKVs={titleMap}\r\n                            ys={chartYs}\r\n                        />\r\n                    ) : (\r\n                        <CurvedLineChart\r\n                            startTime={this.state.start_at}\r\n                            endTime={this.state.end_at}\r\n                            data={chartData}\r\n                            scale={chartScale}\r\n                            fieldKVs={titleMap}\r\n                            ys={chartYs}\r\n                        />\r\n                    )\r\n                }\r\n            </Fragment>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\nimport './App.css';\nimport Charts from './page/Charts';\nimport { getQueryVariable } from './utils/utils';\n\nclass App extends Component {\n\trender () {\n\t\tconst props = this.props;\n\t\tconst querys = getQueryVariable();\n\t\tconsole.log(querys);\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Charts {...props} params={querys} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}